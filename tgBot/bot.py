import telebot as tb
import config as cfg
import utils as ut
import db

bot = tb.TeleBot(cfg.token)


# –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@bot.message_handler(commands=['start'])
def start(msg):
    ut.Editor.del_buttons_text(msg)
    text = '–ü—Ä–∏–≤–µ—Ç, {0}! üëã\n' \
           '–ú–µ–Ω—è –∑–æ–≤—É—Ç {1} ü§ù\n' \
           '–Ø —É–º–µ—é –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã üòé\n\n' \
           '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' \
           '/start - —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ —É–≤–∏–¥–µ—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n' \
           '/values - —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç\n' \
           '/add_value - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –≤–∞–ª—é—Ç—É\n' \
           '/get_admin - –≤–∑—è—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n' \
           '/get_logs - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –æ—à–∏–±–æ–∫\n' \
           '–•–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å?'.format(msg.from_user.first_name, bot.get_me().first_name)
    bot.send_message(msg.chat.id, text, reply_markup=ut.CreateButtons.start_page())


# –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–∞–ª—é—Ç
@bot.message_handler(commands=['values'])
def values(msg):
    ut.Editor.del_buttons_text(msg)
    ut.Values.show_values(msg)


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(commands=['get_admin'])
def get_admin(msg):
    ut.Editor.del_buttons_text(msg)
    if msg.from_user.id not in cfg.admin_list:
        cfg.admin_list.append(msg.from_user.id)
        bot.send_message(msg.chat.id, "–í–∞–º –ø—Ä–∏—Å–≤–æ–µ–Ω —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    else:
        bot.send_message(msg.chat.id, "–í—ã —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
@bot.message_handler(commands=['add_value'])
def write_value(msg):
    ut.Editor.del_buttons_text(msg)
    if db.get_len_info(table='currencies', col='value') >= cfg.max_count_currencies:
        bot.send_message(msg.chat.id, "–î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç")
    elif msg.from_user.id in cfg.admin_list:
        new_currency = bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞–ª—é—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ <–ù–∞–∑–≤–∞–Ω–∏–µ> <–ö–æ–¥>\n"
                                                     "(–ù–∞–ø—Ä–∏–º–µ—Ä: –ë–∏—Ç–∫–æ–∏–Ω BTC)")
        bot.register_next_step_handler(new_currency, ut.Values.check_value)
    else:
        bot.send_message(msg.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ üòî")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤
@bot.message_handler(commands=['get_logs'])
def get_logs(msg):
    ut.Editor.del_buttons_text(msg)
    if msg.from_user.id in cfg.admin_list:
        bot.send_message(msg.chat.id, ut.Logging.get_logs())
    else:
        bot.send_message(msg.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ üòî")
        

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤ –≤ xls —Ñ–æ—Ä–º–∞—Ç–µ  
@bot.message_handler(commands=['get_logs_xls'])
def get_logs(msg):
    ut.Editor.del_buttons_text(msg)
    if msg.from_user.id in cfg.admin_list:
        ut.Logging.get_logs_xls(msg)
    else:
        bot.send_message(msg.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ üòî")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ Telegram (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –Ω–µ –¥–µ–ª–∞–ª)
@bot.message_handler(commands=['clear_table'])
def ask_clear(msg):
    ut.Editor.del_buttons_text(msg)
    if msg.from_user.id in cfg.clear_list:
        table = bot.send_message(msg.chat.id, '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã(logs, currencies, val_for_convert):')
        bot.register_next_step_handler(table, clear_table)


# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—á–∏—Å—Ç–∫–∏
def clear_table(table):
    db.delete_table(table=table.text, admin=True, msg=table)


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —É —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types=['text', ])
def del_buttons(msg):
    ut.Editor.del_buttons_text(msg)


# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ inline
@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    currencies_list = []
    for v in db.get_info(col='value', table='currencies'):
        currencies_list.append(*v)
    # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å"
    if call.data == "yes":
        ut.Editor.del_buttons(call.message)
        db.delete_table(table='val_for_convert')
        bot.send_message(call.message.chat.id, '–í–∞–ª—é—Ç–∞, –∫–æ—Ç–æ—Ä—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º: ',
                         reply_markup=ut.CreateButtons.choice_value(currencies_list))
        bot.answer_callback_query(callback_query_id=call.id)

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ –ø–µ—Ä–≤—É—é –≤–∞–ª—é—Ç—É
    if call.data in currencies_list:
        ut.Editor.del_buttons(call.message)
        ut.Editor.edit_text(call)
        db.insert_table(table='val_for_convert', col='currency', value=[call.data])

        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É
        if db.get_len_info(col='currency', table='val_for_convert') == 1:
            bot.send_message(call.message.chat.id, '–í–∞–ª—é—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º: ',
                             reply_markup=ut.CreateButtons.choice_value(currencies_list, call))
            bot.answer_callback_query(callback_query_id=call.id)

        # –ï—Å–ª–∏ –æ–±–µ –≤–∞–ª—é—Ç—ã –≤—ã–±—Ä–∞–Ω—ã - –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        if db.get_len_info(col='currency', table='val_for_convert') > 1:
            bot.answer_callback_query(callback_query_id=call.id)
            count = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:')
            bot.register_next_step_handler(count, result)


# –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def result(count):
    bot.send_message(count.chat.id, ut.Calculation.check_result(count))


bot.polling(none_stop=True)
